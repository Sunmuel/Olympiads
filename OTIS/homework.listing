        from bisect import bisect_left, bisect_right
        from math import isqrt

        def sieve(n: int) -> list[int]:
          b = bytearray(b"\x01") * (n + 1)
          b[0:2] = b"\x00\x00"
          r = isqrt(n)
          for p in range(2, r + 1):
            if b[p]:
              start = p * p
              b[start:n + 1:p] = b"\x00" * (((n - start) // p) + 1)
          return [i for i, v in enumerate(b) if v]

        def is_pandigital_0_9(x: int) -> bool:
          if x < 10**9 or x >= 10**10:
            return False
          s = str(x)
          return len(s) == 10 and set(s) == set("0123456789")

        def main() -> None:
          primes = sieve(100_000)
          primes_q = [q for q in primes if q <= 2154]
          p2 = [p * p for p in primes]
          total = 0
          for q in primes_q:
            q3 = q * q * q
            lo = 10**9 - q3
            hi = 10**10 - 1 - q3
            i0 = bisect_left(p2, max(0, lo))
            i1 = bisect_right(p2, hi)
            for i in range(i0, i1):
              if is_pandigital_0_9(p2[i] + q3):
                total += 1
          print(total)

        if __name__ == "__main__":
          main()
